name: Deploy website
on:
  push:
    branches:
      - main
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint
      - name: Test code
        run: npm run test
  build:
    needs: test
    runs-on: ubuntu-latest
    # Referencia al archivo de salida (con id: publish)
    outputs:
      script-file: ${{ steps.publish.outputs.script-file }}
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Build website
        run: npm run build
        # Busca el archivo .js que se crea al construir la aplicación (npm run build)
      - name: Publish JS filename
        id: publish
        run: find dist/assets/*.js -type f -execdir echo 'script-file={}' >> $GITHUB_OUTPUT ';'
        # Para descargar archivos y carpetas
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-files
          # path => indica las carpetas o archivos a descargar
          # dist: contiene los archivos del código luego de ser compilados
          # path: |
          #   dist
          #   package.json
          path: dist
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Descarga los archivos creados en build para ser subidos a un servidor
      - name: Get build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist-files
      - name: Output content
        run: ls
        # Referencia al archivo de salida del job "build" el cual obtiene el nombre del archivo .js
      - name: Output filename
        run: echo "${{ needs.build.outputs.script-file }}"
      - name: Deploy
        run: echo "Deploying..."
